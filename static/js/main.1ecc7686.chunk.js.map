{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Header/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","click","id","alt","name","src","image","Wrapper","children","Title","Header","score","highscore","App","state","friends","handleClick","console","log","_this","map","friend","clicked","alert","setState","forEach","shuffle","i","length","j","Math","floor","random","_ref","_this2","this","components_Wrapper","components_Header","components_Title","components_FriendCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"8wFAceA,MAXf,SAAoBC,GAElB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAML,EAAMM,MAAMN,EAAMO,MACrDN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,iBCD1BC,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,iBCG1BC,MAJf,SAAed,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMa,kBCGvBE,SAJA,SAACf,GACZ,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,UAA8BJ,EAAMgB,MAApC,eAAuDhB,EAAMiB,aCqFzDC,6MAhFbC,MAAQ,CACNC,UACAJ,MAAO,EACPC,UAAW,KAKbI,YAAc,SAACd,GACbe,QAAQC,IAAIhB,GACX,IAAIa,EAAUI,EAAKL,MAAMC,QACzBA,EAAUA,EAAQK,IAAI,SAAAC,GAwBrB,OAvBIA,EAAOnB,KAAOA,KAEO,IAAnBmB,EAAOC,SACRC,MAAM,aAENJ,EAAKK,SAAS,CAACb,MAAO,IACtBI,EAAQU,QAAQ,SAASJ,GACxBA,EAAOC,SAAU,MAMnBD,EAAOC,SAAU,EAEjBH,EAAKK,SAAS,CAACb,MAAOQ,EAAKL,MAAMH,MAAQ,IACpCQ,EAAKL,MAAMH,OAASQ,EAAKL,MAAMF,WAChCO,EAAKK,SAAS,CAACZ,UAAWO,EAAKL,MAAMF,UAAY,MAMlDS,IAGPN,EAAUI,EAAKO,QAAQX,GACvBI,EAAKK,SAAS,CAACT,YAMZE,QAAQC,IAAIH,MAOlBW,QAAU,SAAC7B,GACV,IAAK,IAAI8B,EAAI9B,EAAE+B,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACnC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADPM,EAEpB,CAACpC,EAAEgC,GAAIhC,EAAE8B,IAAvB9B,EAAE8B,GAFgCM,EAAA,GAE5BpC,EAAEgC,GAF0BI,EAAA,GAIvC,OAAOpC,2EAKA,IAAAqC,EAAAC,KACP,OACEvC,EAAAC,EAAAC,cAACsC,EAAD,KACExC,EAAAC,EAAAC,cAACuC,EAAD,CAAQ1B,MAAOwB,KAAKrB,MAAMH,MAAOC,UAAWuB,KAAKrB,MAAMF,YACvDhB,EAAAC,EAAAC,cAACwC,EAAD,oBACCH,KAAKrB,MAAMC,QAAQK,IAAI,SAAAC,GAAM,OAC5BzB,EAAAC,EAAAC,cAACyC,EAAD,CACErC,GAAImB,EAAOnB,GACXsC,IAAKnB,EAAOnB,GACZI,MAAOe,EAAOf,MACdL,MAAOiC,EAAKlB,wBA1ENyB,mBCFlBC,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.1ecc7686.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  //console.log(props.id)\n  return (\n    <div className=\"card\" onClick={() => props.click(props.id)}>\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Header = (props) =>{\r\n    return <h1 className=\"score\">Score: {props.score} Highscore: {props.highscore}</h1>;\r\n}\r\n\r\nexport default Header","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport Header from \"./components/Header\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score: 0,\n    highscore: 0\n  };\n\n \n//handleClick needs to grab the of the item clicked, changes the score if the \n  handleClick = (id) => {\n    console.log(id);\n     let friends = this.state.friends;\n     friends = friends.map(friend => {\n       if(friend.id === id ){\n\n         if(friend.clicked === true){\n           alert('game over')\n           \n           this.setState({score: 0});\n           friends.forEach(function(friend){\n            friend.clicked = false;\n           })\n           // reset values\n           // store high score from score\n           // reset score\n         } else {\n          friend.clicked = true;\n          //increment score\n          this.setState({score: this.state.score + 1})\n            if(this.state.score >= this.state.highscore){\n              this.setState({highscore: this.state.highscore + 1})\n            }\n          \n         }\n       \n       }\n      return friend\n      })\n      //Shuffle Friends\n      friends = this.shuffle(friends);\n      this.setState({friends})\n\n      //Run GameLogic\n      // this.gameLogic(friends);\n\n      //  if(id === )\n         console.log(friends);\n      \n  \n\n  };\n\n   //Shuffle the cards after each click \n   shuffle = (a)=> {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n}\n  \n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Header score={this.state.score} highscore={this.state.highscore}></Header>\n        <Title>Clicky Game</Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n            click={this.handleClick}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}